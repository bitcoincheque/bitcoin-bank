<?php
/** Bitcoin Bank plugin for WordPress.
 *
 *  Copyright (C) 2018 Arild Hegvik
 *
 *  GNU GENERAL PUBLIC LICENSE (GNU GPLv3)
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @package Bitcoin-Bank
 */

namespace BCQ_BitcoinBank;

defined('ABSPATH') || exit;

use WP_PluginFramework\Controllers\Std_Controller;
use WP_PluginFramework\Utils\Security_Filter;
use WP_PluginFramework\HtmlComponents\Status_Bar;
use WP_PluginFramework\HtmlElements\Strong;
use WP_PluginFramework\Utils\Debug_Logger;

/**
 * Summary.
 *
 * Description.
 */
class Account_Header_Controller extends Front_Page_Std_Controller {

    protected $client_id = false;
    protected $account_id = false;

    public function __construct( $account_id = null, $client_id = null ) {
        $model_class = 'BCQ_BitcoinBank\Accounts_Db_Table';
        $view_class = 'BCQ_BitcoinBank\Account_Header_View';
        parent::__construct( $model_class, $view_class );

        if( ! $client_id ) {
            $client_id = Accounting::get_client_id();
        }

        if( $client_id )
        {
            $this->client_id = $client_id;
        }

        if( ! $account_id ) {
            $account_id = Accounting::get_client_default_account($this->client_id);
        }

        if( $account_id )
        {
            $this->account_id = $account_id;
        }

        /* TODO: Check permission for client to read account. */
    }

    protected function load_model_values( $values = array() ) {
        if($this->account_id)
        {
            $this->model->load_data_id($this->account_id);
            $values = $this->model->get_all_data_objects();
        }
        return $values;
    }

    protected function draw_view($parameters = null)
    {
        $parameters = array();

        if($this->client_id and $this->account_id)
        {
            $parameters['values'] = $this->model->get_data_object_record();
            $parameters['status'] = true;
        } else {
            $parameters['status'] = false;
        }

        return parent::draw_view($parameters); // TODO: Change the autogenerated stub
    }

    public function button_update_currency_unit_get() {
        $selected = $this->view->currency_unit->get_selected();
    }
}

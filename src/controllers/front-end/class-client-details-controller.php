<?php
/** Bitcoin Bank plugin for WordPress.
 *
 *  Copyright (C) 2021 Arild Hegvik
 *
 *  GNU GENERAL PUBLIC LICENSE (GNU GPLv3)
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @package Bitcoin-Bank
 */

namespace BCQ_BitcoinBank;

defined('ABSPATH') || exit;

use WP_PluginFramework\Controllers\Std_Controller;
use WP_PluginFramework\DataTypes\String_Type;
use WP_PluginFramework\Utils\Security_Filter;
use WP_PluginFramework\HtmlComponents\Status_Bar;
use WP_PluginFramework\HtmlElements\Strong;
use WP_PluginFramework\Utils\Debug_Logger;

/**
 * Summary.
 *
 * Description.
 */
class Client_Details_Controller extends Std_Controller {

    protected $client_id = false;

    public function __construct( $client_id = null, $view_class = null ) {
        $model_class = 'BCQ_BitcoinBank\Clients_Db_Table';
        if( ! isset($view_class)){
            $view_class = 'BCQ_BitcoinBank\Client_Details_View';
        }
        parent::__construct( $model_class, $view_class );

        if( ! $client_id ) {
            $client_id = Accounting::get_client_id();
        }
        $this->client_id = $client_id;
    }

    protected function load_model_values( $values = array() ) {
        if ( isset( $this->model ) ) {
            $result = $this->model->load_data_id($this->client_id);
            if($result === 1)
            {
                $data_in_array = $this->model->get_copy_all_data();
                $values['data_objects'] = $data_in_array[0];

                $values['meta_data'] = $this->model->get_meta_data_list();

                $wp_user_id = $values['data_objects'][Clients_Db_Table::WP_USER_ID];
                $wp_user_data = get_userdata($wp_user_id);
                $values['data_objects']['wp_user_name'] = $wp_user_data->data->user_login;
                $values['meta_data']['wp_user_name'] = array('label' => 'Login username');

                $values['client_id'] = $this->client_id;
                $values['status'] = true;

            } else {
                $values['status'] = false;
            }
        }
        return $values;
    }

    protected function draw_view($parameters = null)
    {
        $parameters = array();

        if ( $this->client_id )
        {
            $result = $this->model->load_data_id($this->client_id);
            if ($result !== false)
            {
                if (is_admin())
                {
                    $data_in_array = $this->model->get_all_data_objects();
                    $data_objects = $data_in_array[0];

                    $wp_current_user = wp_get_current_user();
                    $data_objects['first_name'] = new String_Type(null, null, $wp_current_user->first_name);
                    $data_objects['first_name']->set_property('label', 'First name');

                    $data_objects['last_name'] = new String_Type(null, null, $wp_current_user->last_name);
                    $data_objects['last_name']->set_property('label', 'Last name');

                    $data_objects['email'] = new String_Type(null, null, $wp_current_user->email);
                    $data_objects['email']->set_property('label', 'E-mail');

                    $parameters['data_objects'] = $data_objects;

                }
                else
                {
                    $columns = array(
                        Clients_Db_Table::PRIMARY_KEY,
                        Clients_Db_Table::MONEY_ADDRESS
                    );

                    $data_in_array = $this->model->get_all_data_objects($columns);
                    $data_objects = $data_in_array[0];

                    $parameters['data_objects'] = $data_objects;
                }

                $parameters['status'] = true;
            }
            else
            {
                $parameters['status'] = false;
            }
        }

        return parent::draw_view($parameters); // TODO: Change the autogenerated stub
    }
}
